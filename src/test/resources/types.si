alias str string;
alias unit ();

alias triple (int * int * int);

alias int_double (int * double);

alias JavaPredicate{T} T -> bool;
alias PhantomType{S} string;

alias int_double_pred (int * double) -> bool;
alias int_pred int -> bool;

alias hof_1 int -> int -> int;
alias hof_2 (int -> int) -> int;

# str_pred
#   = JavaPredicate{str}
#   = JavaPredicate{string}
#   = string -> bool
alias str_pred JavaPredicate{str};

# lost_type
#   = JavaPredicate{PhantomType{int}}
#   = JavaPredicate{string}
#   = string -> bool
alias lost_type JavaPredicate{PhantomType{int}};

alias idiotic_string{T::int} string;

# valid_expansion
#   = idiotic_string{int::int}
#   = string
alias valid_expansion idiotic_string{int};

alias int_string_variant{T:>(int | string)} T;

# wtf_int
#   = int_string_variant{int:>(int|string)}
#   = int
alias wtf_int int_string_variant{int};

# wtf_str
#   = int_string_variant{str:>(int|string)}
#   = int_string_variant{string:>(int|string)}
#   = string
alias wtf_str int_string_variant{str};
