binary (val a int, val b int) := do
    val t := (unary a) + b in
    t;
end;
unary (val a int) int = a;
nilary () () = ();

identity{T}(val input T) T = input;

expr to_int{T::bool}(val value T) int = if value then 1 else 0;
expr to_int{T::int}(val value T) int = value;
expr to_int{T::()}(val value T) int = 0;

# This succeeds since it's parametric
calls_to_int{T}(val value T) int = to_int{T} value;

# This also succeeds since type has valid boundary
returns_1() int = calls_to_int{bool} true;