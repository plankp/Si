validate_binary_int_ops() () = do
    val add_ii int = 1 + 2 in
    val sub_ii int = 1 - 2 in
    val mul_ii int = 1 * 2 in
    val div_ii int = 1 / 2 in
    val and int = 1 & 2 in
    val or int = 1 | 2 in
    val not int = ~1 in
    val neg int = -1 in
    val pos int = +1 in

    val cmp_ii int = 1 <=> 2 in
    val lt bool = 1 < 2 in
    val le bool = 1 <= 2 in
    val ge bool = 1 >= 2 in
    val gt bool = 1 > 2 in
    val eq bool = 1 == 2 in
    val ne bool = 1 <> 2 in
    ();
end;

validate_binary_double_ops() () = do
    val add_dd double = 1.0 + 2.0 in
    val sub_dd double = 1.0 - 2.0 in
    val mul_dd double = 1.0 * 2.0 in
    val div_dd double = 1.0 / 2.0 in
    val neg double = -1.0 in
    val pos double = +1.0 in

    val cmp_dd int = 1.0 <=> 2.0 in
    val lt bool = 1.0 < 2.0 in
    val le bool = 1.0 <= 2.0 in
    val ge bool = 1.0 >= 2.0 in
    val gt bool = 1.0 > 2.0 in
    val eq bool = 1.0 == 2.0 in
    val ne bool = 1.0 <> 2.0 in
    ();
end;

validate_int_double_ops() () = do
    val add_id double = 1 + 2.0 in
    val sub_id double = 1 - 2.0 in
    val mul_id double = 1 * 2.0 in
    val div_id double = 1 / 2.0 in

    val cmp_id int = 1 <=> 2.0 in
    val lt bool = 1 < 2.0 in
    val le bool = 1 <= 2.0 in
    val ge bool = 1 >= 2.0 in
    val gt bool = 1 > 2.0 in
    val eq bool = 1 == 2.0 in
    val ne bool = 1 <> 2.0 in
    ();
end;

validate_double_int_ops() () = do
    val add_di double = 1.0 + 2 in
    val sub_di double = 1.0 - 2 in
    val mul_di double = 1.0 * 2 in
    val div_di double = 1.0 / 2 in

    val cmp_di int = 1.0 <=> 2 in
    val lt bool = 1.0 < 2 in
    val le bool = 1.0 <= 2 in
    val ge bool = 1.0 >= 2 in
    val gt bool = 1.0 > 2 in
    val eq bool = 1.0 == 2 in
    val ne bool = 1.0 <> 2 in
    ();
end;

validate_binary_bool_ops() () = do
    val eq bool = true == false in
    val ne bool = true <> false in
    val and bool = true & false in
    val or bool = true | false in
    val not bool = ~true in
    ();
end;

validate_binary_unit_ops() () = do
    val eq bool = () == () in
    val ne bool = () <> () in
    ();
end;

validate_binary_char_ops() () = do
    val cmp_cc int = 'a' <=> '"' in
    val lt bool = '\a' < '\b' in
    val le bool = '\f' <= '\n' in
    val ge bool = '\r' >= '\t' in
    val gt bool = '\v' > '\"' in
    val eq bool = '\'' == '\\' in
    val ne bool = '\u1234' <> '\U00001234' in
    ();
end;

validate_binary_string_ops() () = do
    val cmp_cc int = "a" <=> "'" in
    val lt bool = "\a" < "\b" in
    val le bool = "\f" <= "\n" in
    val ge bool = "\r" >= "\t" in
    val gt bool = "\v" > "\"" in
    val eq bool = "\'" == "\\" in
    val ne bool = "\u1234" <> "\U00030050" in
    ();
end;
